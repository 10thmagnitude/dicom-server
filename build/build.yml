parameters:
  packageArtifacts: true

steps:
- task: DotNetCoreInstaller@0
  inputs:
    version: '2.2.103' 

- script: dotnet build --configuration $(buildConfiguration) --version-suffix $(build.buildNumber) /warnaserror
  displayName: 'dotnet build $(buildConfiguration)'

# To run the tests we install NPM to run the 'azurite' emulator (https://github.com/Azure/Azurite).
# This allows us to test the blob storage providers without an Azure instance.
- task: NodeTool@0
  displayName: 'Use Node 8.x'
  inputs:
    versionSpec: 8.x
    checkLatest: true

- script: npm install -g azurite@2.7.0
  displayName: 'Install Azurite v2.7.0'

# We start the Azurite as a separate process as the start call is blocking.
- script: azurite -s &
  condition: and(succeeded(), eq( variables['Agent.OS'], 'Linux' ))
  displayName: 'Start Azurite Storage Emulator (Linux)'

- script: start azurite -s
  condition: and(succeeded(), eq( variables['Agent.OS'], 'Windows_NT' ))
  displayName: 'Start Azurite Storage Emulator (Windows)'

- task: DotNetCoreCLI@2
  displayName: 'dotnet test UnitTests'
  inputs:
    command: test
    projects: '**\*Tests*.csproj'
    arguments: '--configuration $(buildConfiguration)'

- ${{ if eq(parameters.packageArtifacts, 'true') }}:
  - template: package.yml
